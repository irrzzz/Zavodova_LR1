1. Установка Git
 Скачала дистрибутив Git-клиента для Windows x64(https://git-scm.com/download/win) версии 2.28.0. Непосредственно установила Git.
2. Первоначальная настройка Git
 Установила имя и электронную почту при помощи команд:
  $ git config --global user.name "irrzzz"
  $ git config --global user.email "irazavodova8589@gmail.com"
 Параметры установки окончаний строк - при помощи команд:
  $ git config --global core.autocrlf true #для конвертации из CRLF в LF и обратно
  $ git config --global core.safecrlf warn #для печати предупреждения при необратимом переходе
 Отображение Unicode - при помощи команды:
  $ git config --global core.quotepath off
 Связала текстовый редактор(Sublime Text) с Git:
  $ git config --global core.editor "'c:/program files/sublime text 3/sublime_text.exe' -w"
3. Создание каталога проекта
  $ mkdir lr1 #Создание пустого каталога
4. Инициализация Git
  $ cd lr1 #вход в каталог
  $ git init #инициализация Git/создание репозитория
 Результат:
  Initialized empty Git repository in c:/Users/iraza/lr1/.git/
5. Создание текстового файла отчета
  $ touch ZavodovaIV_LR1.txt #создание текстового документа в каталоге
  $ git add ZavodovaIV_LR1.txt #индексация
  $ git commit -m "First Commit" #первый коммит
 Результат:
  [master (root-commit) bbadd58] First commit
   1 file changed, 0 insertions(+), 0 deletions(-)
   create mode 100644 ZavodovaIV_LR1.txt
6. Заполнение отчета и второй коммит
 Заполнила отчет до пятого пункта, проиндексировала изменения и сделала второй коммит:
  $ git add ZavodovaIV_LR1.txt
  $ git commit
 Открылось окно Sublime Text со следующим текстом:

  # Please enter the commit message for your changes. Lines starting
  # with '#' will be ignored, and an empty message aborts the commit.
  # On branch mastercd
  # Changes to be committed:
  #   (use "git reset HEAD <file>..." to unstage)
  #
  #   modified:   ZavodovaIV_LR1.txt
  #
 В первую, пустую строку, вписала: "Second Commit". Сохранила изменения, закрыла окно.
 Результат:
  [master e806696] Second Commit
   1 file changed, 29 insertions(+)
7. Работа с файлами
 Игнорирование:
  Создала файл .gitignore
   $ touch .gitignore
  В него вписала:
   *.css #игнорировать все css-файлы
   !stylesheet.css #кроме stylesheet.css
  Проиндексировала изменения:
   $ git add .gitignore
  Сделала коммит:
   $ git commit -m "Adding .gitignore"
  Результат:
   [master bc95114] Adding .gitignore
    1 file changed, 2 insertions(+)
    create mode 100644 .gitignore
  Создала файл style.css
   $ touch style.css
  Попыталась проиндексировать:
   $ git add style.css
  Результат:
    The following paths are ignored by one of your .gitignore files:
    style.css
    hint: Use -f if you really want to add them.
    hint: Turn this message off by running
    hint: "git config advice.addIgnoredFile false"
  Создала файл stylesheet.css и проиндексировала его
   $ touch stylesheet.css
   $ git add stylesheet.css
   $ git status
  Результат:
   On branch master
   Changes to be committed:
     (use "git restore --staged <file>..." to unstage)
           new file:   stylesheet.css
  Сделала коммит:
   $ git commit -m "Adding style.css and stylesheet.css"
  Результат:
   [master e421101] Adding style.css and stylesheet.css
    1 file changed, 0 insertions(+), 0 deletions(-)
    create mode 100644 stylesheet.css
 Сравнение:
  В файл stylesheet.css вписала:
   .st{
 	 font-color:red;
   }
   $ git diff
  Результат:
   diff --git a/stylesheet.css b/stylesheet.css
   index e69de29..da7e129 100644
   --- a/stylesheet.css
   +++ b/stylesheet.css
   @@ -0,0 +1,3 @@
   +.st{
   +       font-color:red;
   +}
   \ No newline at end of file
  Проиндексировала изменения и сделала коммит:
   $ git commit -m "First diff"
  Результат:
   [master 04e7632] First diff
    1 file changed, 3 insertions(+)
 Сравнение двух коммитов:
  $ git diff bbadd58 bc95114 #первый коммит и коммит, сделаный после добавления .gitignore
  Результат:
   diff --git a/.gitignore b/.gitignore
   new file mode 100644
   index 0000000..b00a6ef
   --- /dev/null
   +++ b/.gitignore
   @@ -0,0 +1,2 @@
   +*.css
   +!stylesheet.css
   \ No newline at end of file
   diff --git a/ZavodovaIV_LR1.txt b/ZavodovaIV_LR1.txt
   index e69de29..1c70100 100644
   --- a/ZavodovaIV_LR1.txt
   +++ b/ZavodovaIV_LR1.txt
   @@ -0,0 +1,29 @@
 Удаление:
   $ git rm stylesheet.css
  Результат:
   rm 'stylesheet.css'
  Коммит:
   $ git commit -m "Removing stylesheet.css"
  Результат:
   [master 8a189b1] Removing stylesheet.css
    1 file changed, 3 deletions(-)
    delete mode 100644 stylesheet.css
 Перемещение:
  Создала файл hello.html и папку html/, проиндексировала и сделала коммит:
   $ mkdir html
   $ touch hello.html
   $ git add html/
   $ git add hello.html
   $ git commit -m "Adding html/ and hello.html into lr1"
  Результат:
   [master f6af02e] Adding html/ and hello.html into lr1
    1 file changed, 0 insertions(+), 0 deletions(-)
    create mode 100644 html/hello.html
  Перенесла hello.html из lr1 в html:
   $ git mv hello.html html
   $ git status
   On branch master
   Changes to be committed:
     (use "git restore --staged <file>..." to unstage)
           renamed:    hello.html ->  html/hello.html
   $ git commit -m "Moving hello.html to html"
7. Работа с git log
  $ git log
  commit 20d451ec93eff754d524fa5a50af883c0ba70a7f (HEAD -> master)
  Author: irrzzz <irazavodova8589@gmail.com>
  Date:   Tue Sep 8 23:52:32 2020 +0700

      Moving hello.html to htmml/

  commit f6af02e6178f35d88a1d08461925a6a4b21e0122
  Author: irrzzz <irazavodova8589@gmail.com>
  Date:   Tue Sep 8 23:31:01 2020 +0700

      Adding html/ and hello.html into lr1

  commit 8a189b1eb2e42d8d32175154db6ec48616dfb1a9
  Author: irrzzz <irazavodova8589@gmail.com>
  Date:   Tue Sep 8 23:21:57 2020 +0700

      Removing stylesheet.css

  commit 04e76324be8d8ad212a15c971d154c86bfae6c48
  Author: irrzzz <irazavodova8589@gmail.com>
  Date:   Tue Sep 8 23:11:28 2020 +0700

      First diff

  commit e42110193904792b417803391ffdff85b4faed77
  Author: irrzzz <irazavodova8589@gmail.com>
  Date:   Tue Sep 8 23:05:17 2020 +0700

      Adding style.css and stylesheet.css

  commit bc951145f59a66fb965dd184f576f7f48dec95db
  Author: irrzzz <irazavodova8589@gmail.com>
  Date:   Tue Sep 8 22:52:54 2020 +0700

      Adding .gitignore

  commit e8066965acd9c401552fd9192b92e2be1e2c6e23
  Author: irrzzz <irazavodova8589@gmail.com>
  Date:   Tue Sep 8 22:43:19 2020 +0700

      Second Commit

  commit bbadd58e5545659df528a7a5b43ab81f1b6828ae
  Author: irrzzz <irazavodova8589@gmail.com>
  Date:   Tue Sep 8 22:40:59 2020 +0700

      First commit
8. Работа с метками и отмена действий
 Метки:
  Создала метку для текущей версии проекта:
   $ git tag -a v1.0 -m '1st version'

   $ git tag
   v1.0
   $ git show v1.0
   tag v1.0
   Tagger: irrzzz <irazavodova8589@gmail.com>
   Date:   Wed Sep 9 00:07:00 2020 +0700

   1st version

  Добавление метки для старой версии:
   $ git tag -a v0.1 e421101 #коммит, в котором были добавлены style.css и stylesheet.css
  В открывшемся окне Sublime Text вписала "old version"
  Проверка:
   $ git tag
   v0.1 #метка для старой версии
   v1.0 #метка для текущей версии
  Удаление метки:
   $ git tag -d v0.1
   Deleted tag 'v0.1' (was dbe30c8)
  Легковесная метка:
   $ git tag v1.0-lw
  Проверка:
   $ git tag
   v1.0
   v1.0-lw
 Отмена изменений:
  Создала файл stylesheet.css
   $ touch stylesheet.css
  Проиндексировала его
   $ git add stylesheet.css
  Проверка:
   $ git status
   On branch master
   Changes to be committed:
     (use "git restore --staged <file>..." to unstage)
           new file:   stylesheet.css
  Отмена изменений:
   $ git restore --staged stylesheet.css
  Проверка:
   $ git status
   On branch master
   Untracked files:
     (use "git add <file>..." to include in what will be committed)
           stylesheet.css

   no changes added to commit (use "git add" and/or "git commit -a")
  Коммит:
   $ git commit -m "Unstage"
   [master b0bcac6] Unstage
    1 file changed, 237 insertions(+), 154 deletions(-)
    rewrite ZavodovaIV_LR1.txt (98%)

9. Ветки
 Создала новую ветку style:
  $ git checkout -b style
  Switched to a new branch 'style'
 Добавила файл stylesheet.css, в него вписала:
.h1{
     font-color: red;
  }
 Проиндексировала изменения:
  $ git add stylesheet.css
 Создала папку branch1:
  $ mkdir branch1
 Перенесла в нее следующие файлы:
  $ git mv stylesheet.css branch1
  $ git mv html/hello.html branch1
 Коммит:
  $ git commit -m "First branch"
  [style eeab48d] First branch
   3 files changed, 11 insertions(+)
   create mode 100644 branch1/hello.html
   create mode 100644 branch1/stylesheet.css
   delete mode 100644 html/hello.html

 Переместилась в ветку master
  $ git checkout master
  Switched to branch 'master'
 Слияние:
  $ git merge style
  Updating b0bcac6..36b00b7
  Fast-forward
   branch1/hello.html     | 8 ++++++++
   branch1/stylesheet.css | 3 +++
   html/hello.html        | 0
   3 files changed, 11 insertions(+)
   create mode 100644 branch1/hello.html
   create mode 100644 branch1/stylesheet.css
   delete mode 100644 html/hello.html
 Удаление ветки style:
  $ git branch -d style
  Deleted branch style (was 36b00b7).
 Коммит:
  $ git commit -m "Merger and deleting style"
  [master cb6bf13] Merger and deleting style
   1 file changed, 53 insertions(+)

 Решение конфликта:
  Создала текстовый файл example.txt:
   $ touch example.txt
   $ git add example.txt
  Коммит:
   $git commit -m "Add NEW branch and example.txt"
  Создала новую ветку new3:
   $ git checkout -b new3
  В новой ветке в файл example.txt вписала "new3 version"
  Проиндексировала изменения и сделала коммит:
   $git commit -a -m ".."
  Вернулась в master:
   $ git checkout master
  В файл example.txt вписала "master version"
  Коммит:
   $ git commit -a -m "changes for conflict"
   [master b0415e3] changes for conflict
   1 file changed, 1 insertion(+), 1 deletion(-)
  Попыталась сделать слияние веток master и new3:
   $ git merge new3
   Auto-merging example.txt
   CONFLICT (content): Merge conflict in example.txt
   Automatic merge failed; fix conflicts and then commit the result.
  В файле example.txt появился следующий текст:
   «««< HEAD
   master version
   =======
   new3 version
   »»»> new3
  Удалила весь текст, кроме "new3 version"
  Проиндексировала и сделала коммит:
   $ git add example.txt
   $ git commit -m "for merging"
   $ git merge new3
   Already up to date.
10. Механизм прятанья
 Переместила файл example.txt в папку branch1:
  $ git mv example.txt branch1
 Использовала git stash:
  $ git stash
  Saved working directory and index state WIP on master: f93ee3d for merging
11. GitHub
 Завела учетную запись на Github и создала SSH-ключ:
  $ ssh-keygen -t rsa -b 4096 -C "irazavodova8589@gmail.com"

  Generating public/private rsa key pair.
  Enter file in which to save the key (/c/Users/iraza/.ssh/id_rsa): Created directory '/c/Users/iraza/.ssh'.
  Enter passphrase (empty for no passphrase):
  Enter same passphrase again:
  Your identification has been saved in /c/Users/iraza/.ssh/id_rsa
  Your public key has been saved in /c/Users/iraza/.ssh/id_rsa.pub
  The key fingerprint is:
  SHA256:XWr9YFkdlSPGnaVyHtIEXwGQWl5yxAHXnlN7+gZyG48 irazavodova8589@gmail.com
  The key's randomart image is:
  +---[RSA 4096]----+
  | oO**oX|
  | +.@ Xo|
  | + O X *|
  | o = B *.|
  | S + = ..o|
  | . ..o= |
  | o.B |
  | E +|
  | . |
  +----[SHA256]-----+
 На Github в разделе Настройки/SSH вписала свой ключ из файла id_rsa.pub
 Добавила репозиторий lr1:
  $ git remote add origin https://github.com/irrzzz/Zavodova_LR1.git
 Ветка master:
  $ git branch -M master
  $ git push -u origin master
  Enumerating objects: 51, done.
  Counting objects: 100% (51/51), done.
  Delta compression using up to 4 threads
  Compressing objects: 100% (39/39), done.
  Writing objects: 100% (51/51), 8.83 KiB | 430.00 KiB/s, done.
  Total 51 (delta 17), reused 0 (delta 0), pack-reused 0
  remote: Resolving deltas: 100% (17/17), done.
  To https://github.com/irrzzz/Zavodova_LR1.git
  * [new branch] master -> master
  Branch 'master' set up to track remote branch 'master' from 'origin'.
 Ветка new3:
  $ git branch -M new3
  $ git push -u origin new3
  Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
  remote:
  remote: Create a pull request for 'new3' on GitHub by visiting:
  remote: https://github.com/irrzzz/Zavodova_LR1/pull/new/new3
  remote:
  To https://github.com/irrzzz/Zavodova_LR1.git
  * [new branch] new3 -> new3
  Branch 'new3' set up to track remote branch 'new3' from 'origin'.
